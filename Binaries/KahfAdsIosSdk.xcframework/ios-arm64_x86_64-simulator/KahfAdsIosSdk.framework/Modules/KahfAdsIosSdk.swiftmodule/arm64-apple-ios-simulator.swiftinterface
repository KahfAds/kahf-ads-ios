// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64-apple-ios15.6-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name KahfAdsIosSdk
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Combine
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class Logger {
  @objc deinit
}
extension UIKit.UIColor {
  convenience public init?(hex: Swift.String)
}
@_Concurrency.MainActor @preconcurrency public struct AsyncAnimatedImage : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public let placeholder: SwiftUICore.AnyView
  @_Concurrency.MainActor @preconcurrency public let onSuccess: (() -> Swift.Void)?
  @_Concurrency.MainActor @preconcurrency public let onFailure: ((any Swift.Error) -> Swift.Void)?
  @_Concurrency.MainActor @preconcurrency public init(base64Data: Foundation.Data? = nil, url: Foundation.URL? = nil, placeholder: SwiftUICore.AnyView = AnyView(EmptyView()), onSuccess: (() -> Swift.Void)? = nil, onFailure: ((any Swift.Error) -> Swift.Void)? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13KahfAdsIosSdk18AsyncAnimatedImageV4bodyQrvp", 0) __
}
public protocol AdImpressionListener {
  func onAdLoaded()
  func onAdClicked(urlToLoad: Swift.String) -> Swift.Bool
  func onAdFailedToLoad(message: Swift.String, cause: KahfAdsIosSdk.KahfAdsError?)
}
public protocol FallbackAdImpressionListener {
  func onFallbackAdLoaded(primaryAdError: KahfAdsIosSdk.KahfAdsError?, headline: Swift.String)
  func onFallbackAdFailedToLoad(message: Swift.String, cause: KahfAdsIosSdk.KahfAdsError?)
  func onFallbackAdClicked(urlToLoad: Swift.String) -> Swift.Bool
}
extension KahfAdsIosSdk.AdImpressionListener {
  public func onAdLoaded()
  public func onAdClicked(urlToLoad: Swift.String) -> Swift.Bool
  public func onAdFailedToLoad(message: Swift.String, cause: KahfAdsIosSdk.KahfAdsError?)
}
extension KahfAdsIosSdk.FallbackAdImpressionListener {
  public func onFallbackAdLoaded(primaryAdError: KahfAdsIosSdk.KahfAdsError?, headline: Swift.String)
  public func onFallbackAdFailedToLoad(message: Swift.String, cause: KahfAdsIosSdk.KahfAdsError?)
  public func onFallbackAdClicked(urlToLoad: Swift.String) -> Swift.Bool
}
@_Concurrency.MainActor @preconcurrency public struct SmallBannerAdView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(viewConfig: KahfAdsIosSdk.KahfAdsViewConfig, adImpressionListener: (any KahfAdsIosSdk.AdImpressionListener)? = nil, fallbackAdImpressionListener: (any KahfAdsIosSdk.FallbackAdImpressionListener)? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13KahfAdsIosSdk17SmallBannerAdViewV4bodyQrvp", 0) __
}
@_Concurrency.MainActor @preconcurrency public struct MediumBannerAdView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(viewConfig: KahfAdsIosSdk.KahfAdsViewConfig, adImpressionListener: (any KahfAdsIosSdk.AdImpressionListener)? = nil, fallbackAdImpressionListener: (any KahfAdsIosSdk.FallbackAdImpressionListener)? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13KahfAdsIosSdk18MediumBannerAdViewV4bodyQrvp", 0) __
}
@_Concurrency.MainActor @preconcurrency public struct LargeBannerAdView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(viewConfig: KahfAdsIosSdk.KahfAdsViewConfig, adImpressionListener: (any KahfAdsIosSdk.AdImpressionListener)? = nil, fallbackAdImpressionListener: (any KahfAdsIosSdk.FallbackAdImpressionListener)? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13KahfAdsIosSdk17LargeBannerAdViewV4bodyQrvp", 0) __
}
@objc @_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public class KahfSmallBannerAdUIView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public init(viewConfig: KahfAdsIosSdk.KahfAdsViewConfig, adImpressionListener: (any KahfAdsIosSdk.AdImpressionListener)? = nil, fallbackAdImpressionListener: (any KahfAdsIosSdk.FallbackAdImpressionListener)? = nil)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public class KahfMediumBannerAdUIView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public init(viewConfig: KahfAdsIosSdk.KahfAdsViewConfig, adImpressionListener: (any KahfAdsIosSdk.AdImpressionListener)? = nil, fallbackAdImpressionListener: (any KahfAdsIosSdk.FallbackAdImpressionListener)? = nil)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public class KahfLargeBannerAdUIView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public init(viewConfig: KahfAdsIosSdk.KahfAdsViewConfig, adImpressionListener: (any KahfAdsIosSdk.AdImpressionListener)? = nil, fallbackAdImpressionListener: (any KahfAdsIosSdk.FallbackAdImpressionListener)? = nil)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc deinit
}
public enum PlacementId : Swift.Hashable {
  case Epom(Swift.String)
  case Inhouse(Swift.String)
  public func id() -> Swift.String
  public static func == (a: KahfAdsIosSdk.PlacementId, b: KahfAdsIosSdk.PlacementId) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct KahfAdsSdkConfig {
  public init(fallbackPublisherId: Swift.String, latitude: Swift.Float? = nil, longitude: Swift.Float? = nil)
}
public struct KahfAdsViewConfig : Swift.Hashable {
  public static func == (lhs: KahfAdsIosSdk.KahfAdsViewConfig, rhs: KahfAdsIosSdk.KahfAdsViewConfig) -> Swift.Bool
  public let screenName: Swift.String
  public let placementId: KahfAdsIosSdk.PlacementId
  public init(screenName: Swift.String, placementId: KahfAdsIosSdk.PlacementId, refreshIntervalInMillis: Swift.Int64? = nil)
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc open class KahfAdsError : Foundation.NSError, @unchecked Swift.Sendable {
  final public let message: Swift.String
  final public let underlyingError: (any Swift.Error)?
  final public let name: Swift.String
  public init(message: Swift.String, underlyingError: (any Swift.Error)? = nil, name: Swift.String = "KahfAdsError")
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc override dynamic public func encode(with coder: Foundation.NSCoder)
  @objc public class NetworkError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    final public let statusCode: Swift.Int?
    public static let className: Swift.String
    public init(message: Swift.String, statusCode: Swift.Int? = nil, underlyingError: (any Swift.Error)? = nil)
    convenience public init(message: Swift.String, underlyingError: (any Swift.Error)? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc override dynamic public func encode(with coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc public class ServerError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    final public let statusCode: Swift.Int
    public static let className: Swift.String
    public init(message: Swift.String, statusCode: Swift.Int, underlyingError: (any Swift.Error)? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc override dynamic public func encode(with coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc public class NoAdFoundError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    final public let adType: Swift.String?
    public static let className: Swift.String
    public init(message: Swift.String, adType: Swift.String? = nil, underlyingError: (any Swift.Error)? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc override dynamic public func encode(with coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc public class ConfigurationError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    public static let className: Swift.String
    public init(message: Swift.String, underlyingError: (any Swift.Error)? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc public class TimeoutError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    public static let className: Swift.String
    public init(message: Swift.String, underlyingError: (any Swift.Error)? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc public class FallbackAdError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    final public let primaryAdError: KahfAdsIosSdk.KahfAdsError?
    public static let className: Swift.String
    public init(message: Swift.String, primaryAdError: KahfAdsIosSdk.KahfAdsError? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc override dynamic public func encode(with coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc public class UnknownError : KahfAdsIosSdk.KahfAdsError, @unchecked Swift.Sendable {
    public static let className: Swift.String
    public init(message: Swift.String, underlyingError: (any Swift.Error)? = nil)
    @objc required dynamic public init?(coder: Foundation.NSCoder)
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers public class KahfAdsSdk {
  public static let shared: KahfAdsIosSdk.KahfAdsSdk
  public func initialize(config: KahfAdsIosSdk.KahfAdsSdkConfig) throws
  public func isSdkInitialized() -> Swift.Bool
  @objc deinit
}
extension KahfAdsIosSdk.AsyncAnimatedImage : Swift.Sendable {}
extension KahfAdsIosSdk.SmallBannerAdView : Swift.Sendable {}
extension KahfAdsIosSdk.MediumBannerAdView : Swift.Sendable {}
extension KahfAdsIosSdk.LargeBannerAdView : Swift.Sendable {}
